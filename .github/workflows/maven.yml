name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Build with Maven
        run: |
          mvn clean verify \
            -Dspring.profiles.active=test \
            -Dspring.datasource.url=jdbc:postgresql://localhost:5432/testdb \
            -Dspring.datasource.username=testuser \
            -Dspring.datasource.password=testpass \
            -Dspring.datasource.driver-class-name=org.postgresql.Driver \
            -Dspring.jpa.hibernate.ddl-auto=update \
            -Dspring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect \
            -Dspring.sql.init.mode=always \
            -e

      - name: Check JaCoCo coverage
        run: |
          mvn jacoco:report
          covered_lines=$(grep -oP 'covered="\K[0-9]+' target/site/jacoco/jacoco.xml | awk '{s+=$1} END {print s}')
          missed_lines=$(grep -oP 'missed="\K[0-9]+' target/site/jacoco/jacoco.xml | awk '{s+=$1} END {print s}')
          
          total_lines=$((covered_lines + missed_lines))
          
          if [ "$total_lines" -eq 0 ]; then
            echo "No lines to cover."
            exit 1
          fi
          
          coverage=$(echo "scale=2; $covered_lines / $total_lines" | bc)
          
          if (( $(echo "$coverage < 1.0" | bc -l) )); then
            echo "Coverage is below 100%: $coverage"
            exit 1
          fi
